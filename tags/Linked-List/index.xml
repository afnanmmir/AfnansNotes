<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linked List on</title><link>https://afnanmmir.github.io/AfnansNotes/tags/Linked-List/</link><description>Recent content in Linked List on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://afnanmmir.github.io/AfnansNotes/tags/Linked-List/index.xml" rel="self" type="application/rss+xml"/><item><title>LRU Cache</title><link>https://afnanmmir.github.io/AfnansNotes/notes/leetcode/LRUCache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://afnanmmir.github.io/AfnansNotes/notes/leetcode/LRUCache/</guid><description>The problem can be found here
The Problem Design a data structure that follows the constraints of an Least Recently Used (LRU) Cache.</description></item><item><title>Reorder List</title><link>https://afnanmmir.github.io/AfnansNotes/notes/leetcode/ReorderList/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://afnanmmir.github.io/AfnansNotes/notes/leetcode/ReorderList/</guid><description>The problem can be found here
The Problem Given a linked list in the following format: $$L_0 \rightarrow L_1 \dots \rightarrow L_{n-1} \rightarrow L_{n}$$</description></item></channel></rss>